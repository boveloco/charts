{{ if .Values.deployment.enabled -}}
{{ if .Values.cronjob.enabled -}}
{{- fail "Deployment and CronJob cannot be enabled at the same time." -}}
{{ end -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
    {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 8 }}
    {{- end }}
spec:
  revisionHistoryLimit: 3
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        {{ if .Values.labels }}
        {{- toYaml .Values.labels | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.tolerations }}
      tolerations:
        {{- range .Values.tolerations }}
        - key: {{ .key }}
          operator: {{ .operator | default "Equal" }}
          value: {{ .value | default "" }}
          effect: {{ .effect | default "NoSchedule" }}
        {{- end }}
      {{- end }}
      {{- if .Values.deployment.serviceAccountName }}
      serviceAccountName: {{ .Values.deployment.serviceAccountName }}
      {{- end }}
      {{- if .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.deployment.securityContext }}
      securityContext:
        {{- toYaml .Values.deployment.securityContext | nindent 8 }}
      {{- else if .Values.unprivileged }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      {{- end }}
      {{- if .Values.deployment.initContainers }}
      initContainers:
        {{- range .Values.deployment.initContainers }}
        - name: {{ .name }}
          image: {{ .image }}
          {{- if .securityContext }}
          securityContext:
            {{- toYaml .securityContext | nindent 12 }}
          {{- end }}
          imagePullPolicy: {{ .imagePullPolicy | default "IfNotPresent" }}
          command: {{ .command | default "" }}
          {{- if .args }}
          args:
            {{- range .args }}
            - {{ . | nindent 12 }}
            {{- end }}
          {{- end }}
          volumeMounts:
            {{- range .volumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .readOnly | default "true" }}
            {{- end }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Release.Name }}-container
          image: {{ .Values.deployment.image }}
          {{- if .Values.deployment.args }}
          args:
            {{- range .Values.deployment.args }}
            - {{ . }}
            {{- end }}
          {{- end }}
          {{ if .Values.unprivileged }}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
          {{- end }}
          {{ if .Values.deployment.port -}}
          ports:
            - containerPort: {{ .Values.deployment.port }}
          {{- end }}
          resources:
            requests:
              memory: {{ .Values.deployment.resources.requests.memory | default "64Mi" }}
              cpu: {{ .Values.deployment.resources.requests.cpu | default "250m" }}
            {{- if .Values.deployment.resources.limits }}
            limits:
              memory: {{ .Values.deployment.resources.limits.memory | default "128Mi" }}
              cpu: {{ .Values.deployment.resources.limits.cpu | default "500m" }}
            {{- end }}
          env:
            {{- range .Values.deployment.env }}
            - name: {{ .name }}
              {{- if .valueFrom }}
              valueFrom:
                {{- toYaml .valueFrom | nindent 16 }}
              {{- else }}
              value: {{ .value | quote}}
              {{- end }}
            {{- end }}
          volumeMounts:
            {{- range .Values.volumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .readOnly | default "true" }}
              subPath: {{ .subPath | default "" }}
            {{- end }}
            {{- range .Values.hostVolumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .readOnly | default "true" }}
            {{- end }}
            {{- range .Values.pvcVolumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath | default "" }}
            {{- end }}
            {{- range .Values.existingClaimVolumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath | default "" }}
            {{- end }}
            {{- range .Values.emptyDirVolumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath | default "" }}
            {{- end }}
            {{- range .Values.configMapVolumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath | default "" }}
              readOnly: true
            {{- end }}
            {{- range .Values.secretVolumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath | default "" }}
              readOnly: true
            {{- end }}
          imagePullSecrets:
            - name: {{ .Release.Name }}-dockerhub-token
          {{ if .Values.global.imagePullSecrets }}
          {{ range .Values.global.imagePullSecrets }}
            - name: {{ .name }}
          {{ end }}
          {{ end }}
      volumes:
        {{- range .Values.hostVolumeMounts }}
        - name: {{ .name }}
          hostPath:
            path: {{ .hostPath }}
            type: {{ .type | default "Directory" }}
        {{- end }}
        {{- range .Values.pvcVolumeMounts }}
        - name: {{ .name }}
          persistentVolumeClaim:
            claimName: {{ .name }}
        {{- end }}
        {{- range .Values.existingClaimVolumeMounts }}
        - name: {{ .name }}
          persistentVolumeClaim:
            claimName: {{ .name }}
        {{- end }}
        {{- range .Values.emptyDirVolumeMounts }}
        - name: {{ .name }}
          emptyDir:
            medium: {{ .medium | default "" }}
            sizeLimit: {{ .sizeLimit | default "500Mi" }}
        {{- end }}
        {{- range .Values.configMapVolumeMounts }}
        - name: {{ .name }}
          configMap:
            name: {{ .name }}
        {{- end }}
        {{- range .Values.secretVolumeMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .name }}
        {{- end }}

{{- end }}
